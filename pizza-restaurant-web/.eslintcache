[{"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\index.tsx":"1","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\reportWebVitals.ts":"2","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\layout\\App.tsx":"3","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\pizzaStore.ts":"4","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\nav\\Navbar.tsx":"5","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\api\\agent.ts":"6","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\ui\\Theme.js":"7","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\rootStore.ts":"8","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\modalStore.ts":"9","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaCard.tsx":"10","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaList.tsx":"11","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\AddPizzaDialog.tsx":"12","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\ModalContainer.tsx":"13","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\footer\\Footer.tsx":"14","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizzaStatus.ts":"15","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizza.ts":"16","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaForm.tsx":"17","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\form\\MuiCurrencyFormat.tsx":"18","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\DeleteModal.tsx":"19","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\layout\\LoadingComponent.tsx":"20"},{"size":605,"mtime":1612894276354,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":1438,"mtime":1613564157607,"results":"24","hashOfConfig":"22"},{"size":3535,"mtime":1613671231600,"results":"25","hashOfConfig":"22"},{"size":7971,"mtime":1613440941602,"results":"26","hashOfConfig":"22"},{"size":1228,"mtime":1613669700320,"results":"27","hashOfConfig":"22"},{"size":1469,"mtime":1612986606322,"results":"28","hashOfConfig":"22"},{"size":725,"mtime":1612960097636,"results":"29","hashOfConfig":"22"},{"size":730,"mtime":1613571759338,"results":"30","hashOfConfig":"22"},{"size":4121,"mtime":1613572436690,"results":"31","hashOfConfig":"22"},{"size":2875,"mtime":1613670705653,"results":"32","hashOfConfig":"22"},{"size":5514,"mtime":1613439583696,"results":"33","hashOfConfig":"22"},{"size":1204,"mtime":1613572631694,"results":"34","hashOfConfig":"22"},{"size":1348,"mtime":1613527321546,"results":"35","hashOfConfig":"22"},{"size":89,"mtime":1612811384939,"results":"36","hashOfConfig":"22"},{"size":729,"mtime":1613588284198,"results":"37","hashOfConfig":"22"},{"size":7575,"mtime":1613670881696,"results":"38","hashOfConfig":"22"},{"size":778,"mtime":1613526568181,"results":"39","hashOfConfig":"22"},{"size":1029,"mtime":1613572582092,"results":"40","hashOfConfig":"22"},{"size":496,"mtime":1613576433109,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1pwjmd9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\index.tsx",[],["92","93"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\reportWebVitals.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\layout\\App.tsx",["94","95","96"],"import './App.css';\nimport { Navbar } from '../../features/nav/Navbar';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Grid, ThemeProvider} from '@material-ui/core'\n\nimport theme from '../ui/Theme';\nimport { BrowserRouter, Route, RouteComponentProps, Switch, withRouter } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport PizzaList from '../../features/items/pizza/PizzaList';\nimport Footer from '../../features/footer/Footer';\nimport { ToastContainer } from 'react-toastify';\n\nconst App: React.FC<RouteComponentProps> =({location})=>{\n  // useEffect(()=>{\n  //   pizzaAdminStore.loadPizza()\n  //   console.log(Array.from(pizzaAdminRegistry.values()).map((pizza:any)=>pizza.title))\n  // },[pizzaAdminStore])\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [value, setValue] = useState(0);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter> \n         <Navbar  \n          value={value}\n          setValue={setValue}\n          selectedIndex={selectedIndex}\n          setSelectedIndex={setSelectedIndex}/>\n        <ToastContainer position='bottom-right'/>\n        <ModalContainer/>\n        <Switch>\n          <Route exact path='/pizza' component={PizzaList} />\n        </Switch>\n        <Footer/>\n      </BrowserRouter>  \n    </ThemeProvider>\n  );\n}\n\nexport default withRouter(observer (App));\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\pizzaStore.ts",["97","98","99","100"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\nav\\Navbar.tsx",["101","102","103","104","105","106","107","108","109","110","111","112","113"],"import { AppBar, Button, Tabs, MenuItem, makeStyles, Menu, Tab, Toolbar, Typography, useMediaQuery, useTheme, IconButton, List, ListItem, ListItemText, SwipeableDrawer, withStyles, MenuProps } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport logo from '../../assets/logo.svg';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LocalDiningIcon from '@material-ui/icons/LocalDining';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocalPizzaIcon from '@material-ui/icons/LocalPizza';\r\nimport LocalDrinkIcon from '@material-ui/icons/LocalDrink';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  header: {\r\n    backgroundColor: \"rgb(215,54,26)\",\r\n    minHeight: \"5em\",\r\n    zIndex: theme.zIndex.modal + 1,\r\n  },\r\n  logo: {\r\n    height: \"4em\",\r\n    verticalAlign: \"middle\",\r\n    // [theme.breakpoints.down(\"md\")]: {\r\n    //   height: \"7em\"\r\n    // },\r\n    // [theme.breakpoints.down(\"xs\")]: {\r\n    //   height: \"5.5em\"\r\n    // },\r\n  },\r\n  logoTitle:{\r\n    marginLeft:\"350\",\r\n    justifyContent: \"cental\",\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  logoContainer: {\r\n    \r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  menu: {\r\n    backgroundColor: \"rgb(215,54,26)\",\r\n    color: \"white\",\r\n    borderRadius: \"0px\"\r\n  },\r\n  menuItem: {\r\n    fontFamily: \"Raleway\",\r\n  //  textTransform: \"none\",\r\n    fontWeight: 700,\r\n    fontSize: \"1rem\",\r\n    opacity: 0.7,\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n    }\r\n  },\r\n  tab: {\r\n    background: \"rgb(215,54,26)\",\r\n    fontFamily: \"Raleway\",\r\n    textTransform: \"none\",\r\n    fontWeight: 700,\r\n    fontSize: \"1rem\",\r\n    minWidth: 10,\r\n    marginLeft: \"25px\"\r\n  },\r\n\r\n  tabContainer: {\r\n     marginLeft: \"380px\"\r\n  },\r\n  toolbarMargin: {\r\n    marginBottom: \"2em\",\r\n    drawerIcon: {\r\n      height: \"50px\",\r\n      width: \"50px\"\r\n    },\r\n   },\r\n}))\r\ninterface IProps{\r\n  value: number,\r\n  setValue: any,\r\n  selectedIndex: number,\r\n  setSelectedIndex: any\r\n}\r\n\r\nexport const Navbar: React.FC<IProps> = (props) => {\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const classes = useStyles();\r\n  const iOS = process.platform && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [openMenu, setOpenMenu] = React.useState(false);\r\n\r\n  const handleChange = (e:any, newValue:any) => {\r\n    props.setValue(newValue);\r\n  }\r\n\r\n  const handleClick = (e:any) => {\r\n    setAnchorEl(e.currentTarget);\r\n    setOpenMenu(true);\r\n  }\r\n\r\n  const handleMenuItemClick = (e:any, i:any) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n    props.setSelectedIndex(i);\r\n  }\r\n\r\n  const handleClose = (e:any) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n  }\r\n\r\n  const StyledMenu = withStyles({\r\n    paper: {\r\n     // border: '1px solid #d3d4d5',\r\n      backgroundColor: \"rgb(215,54,26)\",\r\n      color: \"white\",\r\n      borderRadius: \"0px\",\r\n      fontFamily: \"Raleway\",\r\n      fontWeight: 700\r\n    },\r\n  })((props: MenuProps) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n  \r\n  // const StyledMenuItem = withStyles((theme) => ({\r\n  //   root: {\r\n  //     '&:focus': {\r\n  //       backgroundColor: theme.palette.primary.main,\r\n  //       '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n  //         color: theme.palette.common.white,\r\n  //       },\r\n  //     },\r\n  //   },\r\n  // }))(MenuItem);\r\n\r\n  const menuOptions = [\r\n    {name: 'Pizza', link: '/pizza', activeIndex: 1, selectedIndex: 0, icon:<LocalPizzaIcon/>},\r\n    {name: 'Snacks', link: '/snacks', activeIndex: 1, selectedIndex: 1, icon:<FastfoodIcon/>},\r\n    {name: 'Drinks', link: '/drinks', activeIndex: 1, selectedIndex: 2, icon:<LocalDrinkIcon/>},\r\n  ];\r\n\r\n  const routes = [\r\n    {name: 'Home', link: '/', activeIndex: 0, icon: <HomeIcon/>, selectedIndex: undefined},\r\n    {\r\n      name: 'Items',\r\n      link: '/pizza',\r\n      activeIndex: 1,\r\n      ariaOwns: anchorEl ? \"simple-menu\" : undefined,\r\n      ariaPopup: anchorEl ? \"true\" as \"true\" : undefined,\r\n      icon: <LocalDiningIcon/>,\r\n      selectedIndex: undefined,\r\n      mouseOver: (event:any) => handleClick(event)\r\n   },\r\n    {name: 'Orders', link: '/orders', activeIndex: 2, icon: <ShoppingCartIcon/>, selectedIndex: undefined}\r\n  ];\r\n\r\n  useEffect(() => {\r\n    [...menuOptions, ...routes].forEach((route) => {\r\n      switch(window.location.pathname) {\r\n        case `${route.link}`:\r\n          if (props.value !== route.activeIndex ) {\r\n            props.setValue(route.activeIndex);\r\n           // route.hasOwnProperty('selectedIndex')? {...route}\r\n             if (route.selectedIndex && route.selectedIndex !== props.selectedIndex) {\r\n                 props.setSelectedIndex(route.selectedIndex);\r\n               }\r\n          }\r\n        break;\r\n        default:\r\n        break;\r\n      }\r\n    });\r\n  }, [props.value, menuOptions, props.selectedIndex, routes, props])\r\n\r\n  const tabs = (\r\n    <React.Fragment>\r\n      <Tabs\r\n        onChange={handleChange}\r\n        value={props.value}\r\n        className={classes.tabContainer}\r\n        indicatorColor = {undefined}\r\n      >\r\n       {routes.map((route, index) => (\r\n        <Tab\r\n          aria-owns={route.ariaOwns}\r\n          aria-haspopup={route.ariaPopup}\r\n          className={classes.tab}\r\n          component={Link}\r\n          onMouseOver={route.mouseOver}\r\n          key={`${route}${index}`}\r\n          to={route.link}\r\n          label={route.name}\r\n          icon={route.icon}\r\n        />\r\n      ))} \r\n      </Tabs>\r\n      \r\n      {/* <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={openMenu}\r\n        onClose={handleClose}\r\n        classes={{paper: classes.menu}}\r\n        MenuListProps={{onMouseLeave: handleClose}}\r\n        elevation={0}\r\n        style={{zIndex: 1302}}\r\n        keepMounted\r\n      > */}\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={openMenu}\r\n        onClose={handleClose}\r\n        MenuListProps={{onMouseLeave: handleClose}}\r\n        style={{zIndex: 1302}}>\r\n        {menuOptions.map((option, i) => (\r\n          <MenuItem\r\n            key={option.name + i}\r\n            onClick={(event:any) => {handleMenuItemClick(event, i); handleClose(event); props.setValue(1);}}\r\n            component={Link}\r\n            to={option.link}\r\n            classes={{ root: classes.menuItem }}\r\n            selected={i === props.selectedIndex && props.value === 1}\r\n          >\r\n           <span style={{marginRight:\"5px\"}}>\r\n             {option.icon}\r\n            </span>\r\n          <ListItemText primary={option.name}/>\r\n          </MenuItem>\r\n        ))}\r\n      </StyledMenu>\r\n    </React.Fragment>\r\n  )\r\n \r\n    return (\r\n      <>\r\n      <AppBar position=\"static\" className={classes.header}>\r\n        <Toolbar>\r\n            <Button\r\n              component={Link}\r\n              to=\"/\"\r\n              disableRipple\r\n              className={classes.logoContainer}\r\n              onClick={() => {console.log('click')}}\r\n            >\r\n              <img className={classes.logo} alt=\"company logo\" src={logo} />\r\n            </Button>\r\n            \r\n          <Typography variant=\"h3\" className={classes.logoTitle} >\r\n            Pizza Restaurant\r\n          </Typography>\r\n          {tabs}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.toolbarMargin} />\r\n      </>\r\n    )\r\n}\r\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\api\\agent.ts",["114","115"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\ui\\Theme.js",[],["116","117"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\rootStore.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\modalStore.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaCard.tsx",["118","119","120"],"import { Card, Tooltip, CardMedia, CardContent, Typography, CardActions, Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton } from '@material-ui/core'\r\nimport React, { useContext } from 'react'\r\nimport { IPizza } from '../../../app/models/pizza'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport cheese from '../../../assets/cheese.svg';\r\nimport { PizzaStatus } from '../../../app/models/pizzaStatus';\r\nimport PizzaForm from './PizzaForm';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\nimport  DeleteModal  from '../../../app/common/modals/DeleteModal'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 300,\r\n      flexGrow: 1,\r\n      //border: \"1px solid black\"\r\n      boxShadow: \"0 0 10px rgba(0,0,0,0.2)\",\r\n      borderRadius: \"0px\",\r\n      fixed: true\r\n    },\r\n    media: {\r\n       height: 260,\r\n       width: 290,\r\n    },\r\n    table: {\r\n      maxWidth: \"xs\",\r\n      paddingTop: \"15px\",\r\n      borderRadius: \"0px\",\r\n    },\r\n    cardActions:{\r\n      marginLeft:\"10px\"\r\n    },\r\n    description:{\r\n      marginTop:\"1rem\",\r\n      marginBottom:\"1rem\"\r\n    },\r\n  });\r\n  \r\ninterface IProps{\r\n    pizza: IPizza\r\n}\r\n\r\nexport const PizzaCard:React.FC<IProps> = ({pizza}) => {\r\n    const classes = useStyles();\r\n    const rootStore = useContext(RootStoreContext);\r\n    const{openModal}=rootStore.modalStore;\r\n    const{deletePizza} = rootStore.pizzaStore;\r\n\r\n    function createData( small: number, medium: number, large: number) {\r\n        return {small, medium, large };\r\n    }\r\n    const rows = [\r\n      createData(pizza.priceForSmall, pizza.priceForMedium, pizza.priceForLarge),\r\n    ];\r\n    return (\r\n        <Card className={classes.root}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={cheese}\r\n            title={pizza.title}\r\n          />\r\n        <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {pizza.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.description}>\r\n             {pizza.description}\r\n            </Typography>\r\n            <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"right\">Small</TableCell>\r\n            <TableCell align=\"right\">Medium</TableCell>\r\n            <TableCell align=\"right\">Large</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow >\r\n              <TableCell align=\"right\">{row.small +\"$\"}</TableCell>\r\n              <TableCell align=\"right\">{row.medium +\"$\"}</TableCell>\r\n              <TableCell align=\"right\">{row.large +\"$\"}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n          </CardContent>\r\n        <CardActions className={classes.cardActions}>\r\n        <Tooltip title=\"Edit\">\r\n        <IconButton \r\n          color=\"primary\" \r\n          aria-label=\"Edit\" \r\n          component=\"span\" \r\n          onClick={()=>openModal(<PizzaForm pizza={pizza}/>, \"Edit Pizza\")}\r\n          >\r\n           <EditIcon/>\r\n        </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton \r\n           color=\"primary\" \r\n           aria-label=\"Delete\" \r\n           component=\"span\" \r\n           onClick={() => openModal(<DeleteModal deleteFunction = {deletePizza} id = {pizza.id}/>, \"Delete Pizza\")}\r\n\r\n          //  //(e: React.MouseEvent<HTMLButtonElement>)=>deletePizza(e, pizza.id)}\r\n          >\r\n           <DeleteIcon/>\r\n        </IconButton>\r\n        </Tooltip>\r\n          {pizza.status===PizzaStatus.UNAVAILABLE?\r\n          <VisibilityOffIcon style={{ marginLeft: \"7em\"}}/>:null}\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n}\r\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaList.tsx",["121","122","123","124"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\AddPizzaDialog.tsx",["125","126","127"],"\r\nimport { TextField, Button, Grid, makeStyles } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  composeValidators,\r\n  hasLengthGreaterThan\r\n} from 'revalidate';\r\nimport { Field, Form as FinalForm} from 'react-final-form';\r\nimport { PizzaFormValues } from '../../../app/models/pizza';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst validate = combineValidators({\r\n  title: isRequired({ message: 'The event title is required' }),\r\n  description: composeValidators(\r\n    isRequired('Description'),\r\n    hasLengthGreaterThan(4)({\r\n      message: 'Description needs to be at least 5 characters'\r\n    })\r\n  )(),\r\n  priceForSmall: isRequired('priceForSmall'),\r\n  priceForMedium: isRequired('priceForMedium'),\r\n  priceForLarge: isRequired('priceForLarge'),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nconst AddPizzaDialog: React.FC = () => {\r\n    // const rootStore = useContext(RootStoreContext);\r\n  const rootStore=useContext(RootStoreContext);\r\n  const {createPizza} = rootStore.pizzaStore;\r\n  const {closeModal} = rootStore.modalStore;\r\n  const [pizzaItem] = useState(new PizzaFormValues());\r\n  console.log(pizzaItem)\r\n  const [] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   if (match.params.id) {\r\n  //     setLoading(true);\r\n  //     loadPizza(match.params.id)\r\n  //       .then(pizza => {\r\n  //         setPizzaItem(new PizzaFormValues(pizzaItem));\r\n  //       })\r\n  //       .finally(() => setLoading(false));\r\n  //   }\r\n  // }, [loadPizza, match.params.id]);\r\n  const sleep = (ms:any) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n\r\n  const handleFinalFormSubmit = async(values: any) => {\r\n    // console.log(values)\r\n    // const { date, time, ...pizzaItem } = values;\r\n    // if (!pizzaItem.id) {\r\n    //   let newPizza = {\r\n    //     ...pizzaItem,\r\n    //   };\r\n    //   console.log(newPizza)\r\n    //   createPizza(newPizza);\r\n    // // } else {\r\n    // //   editPizza(newPizza);\r\n //   }\r\n\r\n \r\n  await sleep(300)\r\n  console.log(values)\r\n\r\n  };\r\n\r\n    return (\r\n      <FinalForm\r\n        validate={validate}\r\n        initialValues={pizzaItem}\r\n        onSubmit={handleFinalFormSubmit}\r\n        render={({ handleSubmit, pristine, submitting}) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n            <Field\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n                name=\"title\"\r\n                component={TextField}\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                autoComplete=\"title\"\r\n                />\r\n            \r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n            <Field\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                component={TextField}\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                autoComplete=\"description\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"small\"\r\n                label=\"Price for small\"\r\n                type=\"number\"\r\n                name=\"priceForSmall\"\r\n                autoComplete=\"priceForSmall\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"medium\"\r\n                label=\"Price for medium\"\r\n                type=\"number\"\r\n                name=\"priceForMedium\"\r\n                autoComplete=\"priceForSmall\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"large\"\r\n                label=\"Price for large\"\r\n                type=\"number\"\r\n                name=\"priceForLarge\"\r\n                autoComplete=\"priceForSmall\"\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={closeModal}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                   // disabled={submitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  </Grid>\r\n                </Grid>\r\n        </form>)}\r\n        />  \r\n    )\r\n}\r\n\r\nexport default withRouter(observer(AddPizzaDialog))\r\n",["128","129"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\ModalContainer.tsx",["130","131"],"\r\nimport React, { useContext } from 'react';\r\nimport { RootStoreContext } from '../../stores/rootStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialogWrapper: {\r\n      padding: theme.spacing(2),\r\n      position: 'absolute',\r\n      top: theme.spacing(5)\r\n  },\r\n  dialogTitle: {\r\n      paddingRight: '0px'\r\n  }\r\n}))\r\n\r\nconst ModalContainer = () => {\r\n    const classes = useStyles();\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {modal: {open, body, title}, closeModal} = rootStore.modalStore;\r\n    \r\n  return (\r\n    <Dialog open={open} onClose={closeModal} fullWidth={true} maxWidth=\"sm\" classes={{ paper: classes.dialogWrapper }}>\r\n       <DialogTitle className={classes.dialogTitle}>\r\n          <div style={{ display: 'flex' }}>\r\n            <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n              {title}\r\n            </Typography>\r\n          </div>\r\n        </DialogTitle>\r\n      <DialogContent>{body}</DialogContent>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default observer(ModalContainer)","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\footer\\Footer.tsx",["132"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function StickyFooter() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"body1\">My sticky footer can be found here.</Typography>\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n  );\r\n}\r\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizzaStatus.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizza.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaForm.tsx",["133","134","135","136","137","138","139","140","141"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\form\\MuiCurrencyFormat.tsx",[],["142","143"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\DeleteModal.tsx",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\layout\\LoadingComponent.tsx",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":3,"column":17,"nodeType":"150","messageId":"151","endLine":3,"endColumn":27},{"ruleId":"148","severity":1,"message":"152","line":3,"column":29,"nodeType":"150","messageId":"151","endLine":3,"endColumn":38},{"ruleId":"148","severity":1,"message":"153","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"154","line":1,"column":58,"nodeType":"150","messageId":"151","endLine":1,"endColumn":65},{"ruleId":"148","severity":1,"message":"155","line":1,"column":77,"nodeType":"150","messageId":"151","endLine":1,"endColumn":85},{"ruleId":"148","severity":1,"message":"156","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":23},{"ruleId":"148","severity":1,"message":"157","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":21},{"ruleId":"148","severity":1,"message":"158","line":1,"column":111,"nodeType":"150","messageId":"151","endLine":1,"endColumn":121},{"ruleId":"148","severity":1,"message":"159","line":1,"column":123,"nodeType":"150","messageId":"151","endLine":1,"endColumn":127},{"ruleId":"148","severity":1,"message":"160","line":1,"column":129,"nodeType":"150","messageId":"151","endLine":1,"endColumn":137},{"ruleId":"148","severity":1,"message":"161","line":1,"column":153,"nodeType":"150","messageId":"151","endLine":1,"endColumn":168},{"ruleId":"148","severity":1,"message":"162","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":16},{"ruleId":"148","severity":1,"message":"163","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":17},{"ruleId":"148","severity":1,"message":"164","line":10,"column":8,"nodeType":"150","messageId":"151","endLine":10,"endColumn":20},{"ruleId":"148","severity":1,"message":"165","line":88,"column":9,"nodeType":"150","messageId":"151","endLine":88,"endColumn":16},{"ruleId":"148","severity":1,"message":"166","line":90,"column":9,"nodeType":"150","messageId":"151","endLine":90,"endColumn":12},{"ruleId":"148","severity":1,"message":"167","line":93,"column":10,"nodeType":"150","messageId":"151","endLine":93,"endColumn":20},{"ruleId":"148","severity":1,"message":"168","line":93,"column":22,"nodeType":"150","messageId":"151","endLine":93,"endColumn":35},{"ruleId":"169","severity":1,"message":"170","line":153,"column":9,"nodeType":"171","endLine":157,"endColumn":4},{"ruleId":"169","severity":1,"message":"172","line":159,"column":9,"nodeType":"171","endLine":172,"endColumn":4},{"ruleId":"148","severity":1,"message":"173","line":1,"column":32,"nodeType":"150","messageId":"151","endLine":1,"endColumn":44},{"ruleId":"174","severity":1,"message":"175","line":31,"column":1,"nodeType":"176","endLine":33,"endColumn":2},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"177","line":1,"column":74,"nodeType":"150","messageId":"151","endLine":1,"endColumn":80},{"ruleId":"148","severity":1,"message":"178","line":12,"column":10,"nodeType":"150","messageId":"151","endLine":12,"endColumn":21},{"ruleId":"148","severity":1,"message":"179","line":12,"column":23,"nodeType":"150","messageId":"151","endLine":12,"endColumn":32},{"ruleId":"148","severity":1,"message":"180","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":18},{"ruleId":"148","severity":1,"message":"178","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":21},{"ruleId":"148","severity":1,"message":"181","line":9,"column":9,"nodeType":"150","messageId":"151","endLine":9,"endColumn":23},{"ruleId":"169","severity":1,"message":"182","line":60,"column":7,"nodeType":"183","endLine":60,"endColumn":18,"suggestions":"184"},{"ruleId":"148","severity":1,"message":"185","line":29,"column":7,"nodeType":"150","messageId":"151","endLine":29,"endColumn":16},{"ruleId":"148","severity":1,"message":"186","line":53,"column":10,"nodeType":"150","messageId":"151","endLine":53,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":57,"column":9,"nodeType":"189","messageId":"190","endLine":57,"endColumn":11},{"ruleId":"144","replacedBy":"191"},{"ruleId":"146","replacedBy":"192"},{"ruleId":"148","severity":1,"message":"177","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":16},{"ruleId":"148","severity":1,"message":"193","line":5,"column":26,"nodeType":"150","messageId":"151","endLine":5,"endColumn":39},{"ruleId":"148","severity":1,"message":"194","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":19},{"ruleId":"148","severity":1,"message":"195","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"196","line":2,"column":20,"nodeType":"150","messageId":"151","endLine":2,"endColumn":30},{"ruleId":"148","severity":1,"message":"197","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":20},{"ruleId":"148","severity":1,"message":"198","line":13,"column":10,"nodeType":"150","messageId":"151","endLine":13,"endColumn":13},{"ruleId":"148","severity":1,"message":"199","line":14,"column":10,"nodeType":"150","messageId":"151","endLine":14,"endColumn":27},{"ruleId":"148","severity":1,"message":"200","line":15,"column":8,"nodeType":"150","messageId":"151","endLine":15,"endColumn":20},{"ruleId":"148","severity":1,"message":"201","line":27,"column":10,"nodeType":"150","messageId":"151","endLine":27,"endColumn":19},{"ruleId":"187","severity":1,"message":"188","line":28,"column":9,"nodeType":"189","messageId":"190","endLine":28,"endColumn":11},{"ruleId":"148","severity":1,"message":"202","line":32,"column":56,"nodeType":"150","messageId":"151","endLine":32,"endColumn":61},{"ruleId":"144","replacedBy":"203"},{"ruleId":"146","replacedBy":"204"},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Grid' is defined but never used.","'autorun' is defined but never used.","'reaction' is defined but never used.","'createContext' is defined but never used.","'PizzaStatus' is defined but never used.","'IconButton' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'SwipeableDrawer' is defined but never used.","'MenuIcon' is defined but never used.","'PhoneIcon' is defined but never used.","'ListItemIcon' is defined but never used.","'matches' is assigned a value but never used.","'iOS' is assigned a value but never used.","'openDrawer' is assigned a value but never used.","'setOpenDrawer' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'menuOptions' array makes the dependencies of useEffect Hook (at line 190) change on every render. To fix this, wrap the initialization of 'menuOptions' in its own useMemo() Hook.","VariableDeclarator","The 'routes' array makes the dependencies of useEffect Hook (at line 190) change on every render. To fix this, wrap the initialization of 'routes' in its own useMemo() Hook.","'AxiosPromise' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'useLocation' is defined but never used.","'useParams' is defined but never used.","'useTheme' is defined but never used.","'AddPizzaDialog' is defined but never used.","React Hook useEffect has a missing dependency: 'pizzaList'. Either include it or remove the dependency array.","ArrayExpression",["207"],"'useStyles' is assigned a value but never used.","'createPizza' is assigned a value but never used.","no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected",["205"],["206"],"'DialogActions' is defined but never used.","'CssBaseline' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'makeStyles' is defined but never used.","'Box' is defined but never used.","'MuiCurrencyFormat' is defined but never used.","'NumberFormat' is defined but never used.","'pizzaItem' is assigned a value but never used.","'reset' is assigned a value but never used.",["205"],["206"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [loadPizza, pizzaList]",{"range":"210","text":"211"},[1834,1845],"[loadPizza, pizzaList]"]