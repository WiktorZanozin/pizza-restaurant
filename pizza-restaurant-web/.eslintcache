[{"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\index.tsx":"1","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\reportWebVitals.ts":"2","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\layout\\App.tsx":"3","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\pizzaStore.ts":"4","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\nav\\Navbar.tsx":"5","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\api\\agent.ts":"6","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\ui\\Theme.js":"7","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\rootStore.ts":"8","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\modalStore.ts":"9","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaCard.tsx":"10","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaList.tsx":"11","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\AddPizzaDialog.tsx":"12","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\ModalContainer.tsx":"13","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\footer\\Footer.tsx":"14","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizzaStatus.ts":"15","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizza.ts":"16"},{"size":605,"mtime":1612894276354,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1339,"mtime":1613408684640,"results":"20","hashOfConfig":"18"},{"size":1942,"mtime":1613259447638,"results":"21","hashOfConfig":"18"},{"size":7971,"mtime":1613088412515,"results":"22","hashOfConfig":"18"},{"size":1222,"mtime":1613259447638,"results":"23","hashOfConfig":"18"},{"size":1469,"mtime":1612986606322,"results":"24","hashOfConfig":"18"},{"size":725,"mtime":1612960097636,"results":"25","hashOfConfig":"18"},{"size":730,"mtime":1613412889205,"results":"26","hashOfConfig":"18"},{"size":3034,"mtime":1613259447765,"results":"27","hashOfConfig":"18"},{"size":2528,"mtime":1613412904986,"results":"28","hashOfConfig":"18"},{"size":5261,"mtime":1613414065302,"results":"29","hashOfConfig":"18"},{"size":1242,"mtime":1613412078664,"results":"30","hashOfConfig":"18"},{"size":1922,"mtime":1613088031653,"results":"31","hashOfConfig":"18"},{"size":89,"mtime":1612811384939,"results":"32","hashOfConfig":"18"},{"size":729,"mtime":1613408078959,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1pwjmd9",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\index.tsx",[],["72","73"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\reportWebVitals.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\layout\\App.tsx",["74","75","76"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\pizzaStore.ts",["77","78","79","80"],"import {observable, action, runInAction, makeObservable, autorun, computed, reaction} from 'mobx'\r\nimport { IPizza } from '../modules/pizza'\r\nimport { createContext, SyntheticEvent } from 'react';\r\nimport agent from '../api/agent';\r\nimport { PizzaStatus } from '../modules/pizzaStatus';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport default class PizzaAdminStore{\r\n    rootStore: RootStore;\r\n    pizzaAdminRegistry = new Map();\r\n    pizza: IPizza[]=[]\r\n\r\nconstructor( rootStore: RootStore) {\r\n  this.rootStore = rootStore;\r\n    makeObservable(this, {\r\n        pizza: observable,\r\n        createPizza: action,\r\n        pizzaList: computed\r\n    })\r\n    \r\n    autorun(() => this.loadPizza())\r\n}\r\n  get pizzaList() {\r\n    return Array.from(this.pizzaAdminRegistry.values())\r\n  }\r\n       createPizza = async (pizzaItem: IPizza) => {\r\n          //this.submitting = true;\r\n          try {\r\n            await agent.PizzaAdmin.create(pizzaItem);\r\n            runInAction(() => {\r\n              //this.pizzaAdminRegistry.set(pizzaItem.id, pizzaItem);\r\n             // this.editMode = false;\r\n              //this.submitting = false;\r\n            })\r\n          } catch (error) {\r\n            runInAction(() => {\r\n              //this.submitting = false;\r\n            })\r\n            console.log(error);\r\n          }\r\n        };\r\n\r\n      loadPizza = async()=>{\r\n                //  this.loadingInitial=true;\r\n        try{\r\n            const pizza = await agent.PizzaAdmin.list();\r\n            runInAction(()=>\r\n            pizza.forEach((pizzaItem) => {\r\n            this.pizzaAdminRegistry.set(pizzaItem.id, pizzaItem);\r\n            this.pizza=[...pizza]\r\n            }))\r\n                  // this.loadingInitial=false\r\n        }\r\n        catch (error) {\r\n        // runInAction('load activities error', () => {\r\n        //               this.loadingInitial = false;\r\n        //  })\r\n            throw error;\r\n        }\r\n        } \r\n        \r\n}\r\n\r\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\nav\\Navbar.tsx",["81","82","83","84","85","86","87","88","89","90","91","92","93"],"import { AppBar, Button, Tabs, MenuItem, makeStyles, Menu, Tab, Toolbar, Typography, useMediaQuery, useTheme, IconButton, List, ListItem, ListItemText, SwipeableDrawer, withStyles, MenuProps } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport logo from '../../assets/logo.svg';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LocalDiningIcon from '@material-ui/icons/LocalDining';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocalPizzaIcon from '@material-ui/icons/LocalPizza';\r\nimport LocalDrinkIcon from '@material-ui/icons/LocalDrink';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  header: {\r\n    backgroundColor: \"rgb(215,54,26)\",\r\n    minHeight: \"5em\",\r\n    zIndex: theme.zIndex.modal + 1,\r\n  },\r\n  logo: {\r\n    height: \"4em\",\r\n    verticalAlign: \"middle\",\r\n    // [theme.breakpoints.down(\"md\")]: {\r\n    //   height: \"7em\"\r\n    // },\r\n    // [theme.breakpoints.down(\"xs\")]: {\r\n    //   height: \"5.5em\"\r\n    // },\r\n  },\r\n  logoTitle:{\r\n    marginLeft:\"350\",\r\n    justifyContent: \"cental\",\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  logoContainer: {\r\n    \r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  menu: {\r\n    backgroundColor: \"rgb(215,54,26)\",\r\n    color: \"white\",\r\n    borderRadius: \"0px\"\r\n  },\r\n  menuItem: {\r\n    fontFamily: \"Raleway\",\r\n  //  textTransform: \"none\",\r\n    fontWeight: 700,\r\n    fontSize: \"1rem\",\r\n    opacity: 0.7,\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n    }\r\n  },\r\n  tab: {\r\n    background: \"rgb(215,54,26)\",\r\n    fontFamily: \"Raleway\",\r\n    textTransform: \"none\",\r\n    fontWeight: 700,\r\n    fontSize: \"1rem\",\r\n    minWidth: 10,\r\n    marginLeft: \"25px\"\r\n  },\r\n\r\n  tabContainer: {\r\n     marginLeft: \"380px\"\r\n  },\r\n  toolbarMargin: {\r\n    marginBottom: \"2em\",\r\n    drawerIcon: {\r\n      height: \"50px\",\r\n      width: \"50px\"\r\n    },\r\n   },\r\n}))\r\ninterface IProps{\r\n  value: number,\r\n  setValue: any,\r\n  selectedIndex: number,\r\n  setSelectedIndex: any\r\n}\r\n\r\nexport const Navbar: React.FC<IProps> = (props) => {\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const classes = useStyles();\r\n  const iOS = process.platform && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [openMenu, setOpenMenu] = React.useState(false);\r\n\r\n  const handleChange = (e:any, newValue:any) => {\r\n    props.setValue(newValue);\r\n  }\r\n\r\n  const handleClick = (e:any) => {\r\n    setAnchorEl(e.currentTarget);\r\n    setOpenMenu(true);\r\n  }\r\n\r\n  const handleMenuItemClick = (e:any, i:any) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n    props.setSelectedIndex(i);\r\n  }\r\n\r\n  const handleClose = (e:any) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n  }\r\n\r\n  const StyledMenu = withStyles({\r\n    paper: {\r\n     // border: '1px solid #d3d4d5',\r\n      backgroundColor: \"rgb(215,54,26)\",\r\n      color: \"white\",\r\n      borderRadius: \"0px\",\r\n      fontFamily: \"Raleway\",\r\n      fontWeight: 700\r\n    },\r\n  })((props: MenuProps) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n  \r\n  // const StyledMenuItem = withStyles((theme) => ({\r\n  //   root: {\r\n  //     '&:focus': {\r\n  //       backgroundColor: theme.palette.primary.main,\r\n  //       '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n  //         color: theme.palette.common.white,\r\n  //       },\r\n  //     },\r\n  //   },\r\n  // }))(MenuItem);\r\n\r\n  const menuOptions = [\r\n    {name: 'Pizza', link: '/pizza', activeIndex: 1, selectedIndex: 0, icon:<LocalPizzaIcon/>},\r\n    {name: 'Snacks', link: '/snacks', activeIndex: 1, selectedIndex: 1, icon:<FastfoodIcon/>},\r\n    {name: 'Drinks', link: '/drinks', activeIndex: 1, selectedIndex: 2, icon:<LocalDrinkIcon/>},\r\n  ];\r\n\r\n  const routes = [\r\n    {name: 'Home', link: '/', activeIndex: 0, icon: <HomeIcon/>, selectedIndex: undefined},\r\n    {\r\n      name: 'Items',\r\n      link: '/pizza',\r\n      activeIndex: 1,\r\n      ariaOwns: anchorEl ? \"simple-menu\" : undefined,\r\n      ariaPopup: anchorEl ? \"true\" as \"true\" : undefined,\r\n      icon: <LocalDiningIcon/>,\r\n      selectedIndex: undefined,\r\n      mouseOver: (event:any) => handleClick(event)\r\n   },\r\n    {name: 'Orders', link: '/orders', activeIndex: 2, icon: <ShoppingCartIcon/>, selectedIndex: undefined}\r\n  ];\r\n\r\n  useEffect(() => {\r\n    [...menuOptions, ...routes].forEach((route) => {\r\n      switch(window.location.pathname) {\r\n        case `${route.link}`:\r\n          if (props.value !== route.activeIndex ) {\r\n            props.setValue(route.activeIndex);\r\n           // route.hasOwnProperty('selectedIndex')? {...route}\r\n             if (route.selectedIndex && route.selectedIndex !== props.selectedIndex) {\r\n                 props.setSelectedIndex(route.selectedIndex);\r\n               }\r\n          }\r\n        break;\r\n        default:\r\n        break;\r\n      }\r\n    });\r\n  }, [props.value, menuOptions, props.selectedIndex, routes, props])\r\n\r\n  const tabs = (\r\n    <React.Fragment>\r\n      <Tabs\r\n        onChange={handleChange}\r\n        value={props.value}\r\n        className={classes.tabContainer}\r\n        indicatorColor = {undefined}\r\n      >\r\n       {routes.map((route, index) => (\r\n        <Tab\r\n          aria-owns={route.ariaOwns}\r\n          aria-haspopup={route.ariaPopup}\r\n          className={classes.tab}\r\n          component={Link}\r\n          onMouseOver={route.mouseOver}\r\n          key={`${route}${index}`}\r\n          to={route.link}\r\n          label={route.name}\r\n          icon={route.icon}\r\n        />\r\n      ))} \r\n      </Tabs>\r\n      \r\n      {/* <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={openMenu}\r\n        onClose={handleClose}\r\n        classes={{paper: classes.menu}}\r\n        MenuListProps={{onMouseLeave: handleClose}}\r\n        elevation={0}\r\n        style={{zIndex: 1302}}\r\n        keepMounted\r\n      > */}\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={openMenu}\r\n        onClose={handleClose}\r\n        MenuListProps={{onMouseLeave: handleClose}}\r\n        style={{zIndex: 1302}}>\r\n        {menuOptions.map((option, i) => (\r\n          <MenuItem\r\n            key={option.name + i}\r\n            onClick={(event:any) => {handleMenuItemClick(event, i); handleClose(event); props.setValue(1);}}\r\n            component={Link}\r\n            to={option.link}\r\n            classes={{ root: classes.menuItem }}\r\n            selected={i === props.selectedIndex && props.value === 1}\r\n          >\r\n           <span style={{marginRight:\"5px\"}}>\r\n             {option.icon}\r\n            </span>\r\n          <ListItemText primary={option.name}/>\r\n          </MenuItem>\r\n        ))}\r\n      </StyledMenu>\r\n    </React.Fragment>\r\n  )\r\n \r\n    return (\r\n      <>\r\n      <AppBar position=\"static\" className={classes.header}>\r\n        <Toolbar>\r\n            <Button\r\n              component={Link}\r\n              to=\"/\"\r\n              disableRipple\r\n              className={classes.logoContainer}\r\n              onClick={() => {console.log('click')}}\r\n            >\r\n              <img className={classes.logo} alt=\"company logo\" src={logo} />\r\n            </Button>\r\n            \r\n          <Typography variant=\"h3\" className={classes.logoTitle} >\r\n            Pizza Restaurant\r\n          </Typography>\r\n          {tabs}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.toolbarMargin} />\r\n      </>\r\n    )\r\n}\r\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\api\\agent.ts",["94","95"],"import axios, { AxiosResponse, AxiosPromise } from 'axios';\r\nimport { IPizza } from '../modules/pizza';\r\n\r\naxios.defaults.baseURL='http://localhost:3001/';\r\n\r\naxios.interceptors.response.use(undefined, error=>{\r\n    if(error.response.status===404){\r\n        throw error.response;\r\n    }\r\n})\r\nconst responseBody=(response:AxiosResponse)=> response.data;\r\n\r\nconst sleep=(ms:number)=>(response:AxiosResponse)=>\r\n  new Promise<AxiosResponse>(resolve=>setTimeout(()=>resolve(response), ms))\r\n  \r\nconst requests={\r\n    get: (url:string)=>axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url:string, body: {})=>axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url:string, body: {})=>axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    delete: (url:string)=>axios.delete(url).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst PizzaAdmin={\r\n    list:():Promise<IPizza[]>=>requests.get('/pizza'),\r\n    details:(id:string)=>requests.get(`/pizza/${id}`),\r\n    create:(pizza:IPizza)=>requests.post('/pizza/', pizza),\r\n    update:(pizza:IPizza)=>requests.put(`/pizza/${pizza.id}`, pizza),\r\n    delete:(id:string)=>requests.delete(`/pizza/${id}`),\r\n}\r\n\r\nexport default {\r\n    PizzaAdmin\r\n}","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\ui\\Theme.js",[],["96","97"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\rootStore.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\modalStore.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaCard.tsx",["98","99"],"import { Card, CardActionArea, CardMedia, CardContent, Typography, CardActions, Button, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IPizza } from '../../../app/modules/pizza'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport cheese from '../../../assets/cheese.svg';\r\nimport { PizzaStatus } from '../../../app/modules/pizzaStatus'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 300,\r\n      flexGrow: 1,\r\n      //border: \"1px solid black\"\r\n      boxShadow: \"0 0 10px rgba(0,0,0,0.2)\",\r\n      borderRadius: \"0px\",\r\n      fixed: true\r\n    },\r\n    media: {\r\n       height: 260,\r\n       width: 290,\r\n    },\r\n    table: {\r\n      maxWidth: \"xs\",\r\n      paddingTop: \"15px\",\r\n      borderRadius: \"0px\",\r\n    },\r\n    cardActions:{\r\n      marginLeft:\"10px\"\r\n    },\r\n    description:{\r\n      marginTop:\"1rem\",\r\n      marginBottom:\"1rem\"\r\n    },\r\n  });\r\n  \r\ninterface IProps{\r\n    pizza:IPizza\r\n}\r\n\r\nexport const PizzaCard:React.FC<IProps> = ({pizza}) => {\r\n    const classes = useStyles();\r\n    function createData( small: number, medium: number, large: number) {\r\n        return {small, medium, large };\r\n    }\r\n    const rows = [\r\n      createData(pizza.priceForSmall, pizza.priceForMedium, pizza.priceForLarge),\r\n    ];\r\n    return (\r\n        <Card className={classes.root}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={cheese}\r\n            title={pizza.title}\r\n          />\r\n        <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {pizza.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.description}>\r\n             {pizza.description}\r\n            </Typography>\r\n            <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"right\">Small</TableCell>\r\n            <TableCell align=\"right\">Medium</TableCell>\r\n            <TableCell align=\"right\">Large</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow >\r\n              <TableCell align=\"right\">{row.small +\"$\"}</TableCell>\r\n              <TableCell align=\"right\">{row.medium +\"$\"}</TableCell>\r\n              <TableCell align=\"right\">{row.large +\"$\"}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n          </CardContent>\r\n        <CardActions className={classes.cardActions}>\r\n          <EditIcon/>\r\n          <DeleteIcon/>\r\n          {pizza.status===PizzaStatus.UNAVAILABLE?\r\n          <VisibilityOffIcon style={{ marginLeft: \"7em\"}}/>:null}\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n}\r\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaList.tsx",["100"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\AddPizzaDialog.tsx",["101","102","103","104","105","106","107"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\ModalContainer.tsx",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\footer\\Footer.tsx",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizzaStatus.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizza.ts",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":17,"nodeType":"114","messageId":"115","endLine":3,"endColumn":27},{"ruleId":"112","severity":1,"message":"116","line":3,"column":29,"nodeType":"114","messageId":"115","endLine":3,"endColumn":38},{"ruleId":"112","severity":1,"message":"117","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"112","severity":1,"message":"118","line":1,"column":77,"nodeType":"114","messageId":"115","endLine":1,"endColumn":85},{"ruleId":"112","severity":1,"message":"119","line":3,"column":10,"nodeType":"114","messageId":"115","endLine":3,"endColumn":23},{"ruleId":"112","severity":1,"message":"120","line":3,"column":25,"nodeType":"114","messageId":"115","endLine":3,"endColumn":39},{"ruleId":"112","severity":1,"message":"121","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":21},{"ruleId":"112","severity":1,"message":"122","line":1,"column":111,"nodeType":"114","messageId":"115","endLine":1,"endColumn":121},{"ruleId":"112","severity":1,"message":"123","line":1,"column":123,"nodeType":"114","messageId":"115","endLine":1,"endColumn":127},{"ruleId":"112","severity":1,"message":"124","line":1,"column":129,"nodeType":"114","messageId":"115","endLine":1,"endColumn":137},{"ruleId":"112","severity":1,"message":"125","line":1,"column":153,"nodeType":"114","messageId":"115","endLine":1,"endColumn":168},{"ruleId":"112","severity":1,"message":"126","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":16},{"ruleId":"112","severity":1,"message":"127","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":17},{"ruleId":"112","severity":1,"message":"128","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":20},{"ruleId":"112","severity":1,"message":"129","line":88,"column":9,"nodeType":"114","messageId":"115","endLine":88,"endColumn":16},{"ruleId":"112","severity":1,"message":"130","line":90,"column":9,"nodeType":"114","messageId":"115","endLine":90,"endColumn":12},{"ruleId":"112","severity":1,"message":"131","line":93,"column":10,"nodeType":"114","messageId":"115","endLine":93,"endColumn":20},{"ruleId":"112","severity":1,"message":"132","line":93,"column":22,"nodeType":"114","messageId":"115","endLine":93,"endColumn":35},{"ruleId":"133","severity":1,"message":"134","line":153,"column":9,"nodeType":"135","endLine":157,"endColumn":4},{"ruleId":"133","severity":1,"message":"136","line":159,"column":9,"nodeType":"135","endLine":172,"endColumn":4},{"ruleId":"112","severity":1,"message":"137","line":1,"column":32,"nodeType":"114","messageId":"115","endLine":1,"endColumn":44},{"ruleId":"138","severity":1,"message":"139","line":31,"column":1,"nodeType":"140","endLine":33,"endColumn":2},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"141","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":30},{"ruleId":"112","severity":1,"message":"142","line":1,"column":81,"nodeType":"114","messageId":"115","endLine":1,"endColumn":87},{"ruleId":"112","severity":1,"message":"143","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":18},{"ruleId":"112","severity":1,"message":"144","line":2,"column":29,"nodeType":"114","messageId":"115","endLine":2,"endColumn":35},{"ruleId":"112","severity":1,"message":"145","line":2,"column":37,"nodeType":"114","messageId":"115","endLine":2,"endColumn":40},{"ruleId":"112","severity":1,"message":"146","line":2,"column":42,"nodeType":"114","messageId":"115","endLine":2,"endColumn":51},{"ruleId":"112","severity":1,"message":"147","line":2,"column":53,"nodeType":"114","messageId":"115","endLine":2,"endColumn":64},{"ruleId":"112","severity":1,"message":"148","line":2,"column":72,"nodeType":"114","messageId":"115","endLine":2,"endColumn":82},{"ruleId":"112","severity":1,"message":"149","line":52,"column":9,"nodeType":"114","messageId":"115","endLine":52,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":57,"column":9,"nodeType":"152","messageId":"153","endLine":57,"endColumn":11},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Grid' is defined but never used.","'reaction' is defined but never used.","'createContext' is defined but never used.","'SyntheticEvent' is defined but never used.","'PizzaStatus' is defined but never used.","'IconButton' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'SwipeableDrawer' is defined but never used.","'MenuIcon' is defined but never used.","'PhoneIcon' is defined but never used.","'ListItemIcon' is defined but never used.","'matches' is assigned a value but never used.","'iOS' is assigned a value but never used.","'openDrawer' is assigned a value but never used.","'setOpenDrawer' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'menuOptions' array makes the dependencies of useEffect Hook (at line 190) change on every render. To fix this, wrap the initialization of 'menuOptions' in its own useMemo() Hook.","VariableDeclarator","The 'routes' array makes the dependencies of useEffect Hook (at line 190) change on every render. To fix this, wrap the initialization of 'routes' in its own useMemo() Hook.","'AxiosPromise' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CardActionArea' is defined but never used.","'Button' is defined but never used.","'useTheme' is defined but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'CssBaseline' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","no-global-assign","no-unsafe-negation"]