[{"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\index.tsx":"1","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\reportWebVitals.ts":"2","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\layout\\App.tsx":"3","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\pizzaStore.ts":"4","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\nav\\Navbar.tsx":"5","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\api\\agent.ts":"6","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\ui\\Theme.js":"7","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\rootStore.ts":"8","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\modalStore.ts":"9","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaCard.tsx":"10","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaList.tsx":"11","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\AddPizzaDialog.tsx":"12","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\ModalContainer.tsx":"13","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\footer\\Footer.tsx":"14","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizzaStatus.ts":"15","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizza.ts":"16","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaForm.tsx":"17","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\form\\MuiCurrencyFormat.tsx":"18","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\DeleteModal.tsx":"19"},{"size":605,"mtime":1612894276354,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1438,"mtime":1613564157607,"results":"23","hashOfConfig":"21"},{"size":3426,"mtime":1613523312509,"results":"24","hashOfConfig":"21"},{"size":7971,"mtime":1613440941602,"results":"25","hashOfConfig":"21"},{"size":1222,"mtime":1613523333506,"results":"26","hashOfConfig":"21"},{"size":1469,"mtime":1612986606322,"results":"27","hashOfConfig":"21"},{"size":725,"mtime":1612960097636,"results":"28","hashOfConfig":"21"},{"size":730,"mtime":1613571759338,"results":"29","hashOfConfig":"21"},{"size":4121,"mtime":1613572436690,"results":"30","hashOfConfig":"21"},{"size":2596,"mtime":1613569176040,"results":"31","hashOfConfig":"21"},{"size":5514,"mtime":1613439583696,"results":"32","hashOfConfig":"21"},{"size":1204,"mtime":1613572631694,"results":"33","hashOfConfig":"21"},{"size":1348,"mtime":1613527321546,"results":"34","hashOfConfig":"21"},{"size":89,"mtime":1612811384939,"results":"35","hashOfConfig":"21"},{"size":729,"mtime":1613520805511,"results":"36","hashOfConfig":"21"},{"size":5861,"mtime":1613564708386,"results":"37","hashOfConfig":"21"},{"size":778,"mtime":1613526568181,"results":"38","hashOfConfig":"21"},{"size":1029,"mtime":1613572582092,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1pwjmd9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\index.tsx",[],["87","88"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\reportWebVitals.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\layout\\App.tsx",["89","90","91"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\pizzaStore.ts",["92","93","94"],"import {observable, action, runInAction, makeObservable, autorun, computed, reaction} from 'mobx'\r\nimport { IPizza } from '../models/pizza'\r\nimport { createContext, SyntheticEvent } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport agent from '../api/agent';\r\nimport { PizzaStatus } from '../models/pizzaStatus';\r\nimport { RootStore } from './rootStore';\r\n\r\nexport default class PizzaAdminStore{\r\n    rootStore: RootStore;\r\n    pizzaAdminRegistry = new Map();\r\n    pizzaItem: IPizza | null = null;\r\n    pizza: IPizza[]=[]\r\n    loadingInitial = false;\r\n    target = '';\r\n    submitting = false;\r\n\r\nconstructor( rootStore: RootStore) {\r\n  this.rootStore = rootStore;\r\n    makeObservable(this, {\r\n        target: observable,\r\n        pizza: observable,\r\n        pizzaItem: observable,\r\n        loadingInitial:observable,\r\n        submitting: observable,\r\n        createPizza: action,\r\n        editPizza: action,\r\n        deletePizza: action,\r\n        pizzaList: computed\r\n    })\r\n    \r\n    autorun(() => this.loadPizza())\r\n}\r\n    get pizzaList() {\r\n      return Array.from(this.pizzaAdminRegistry.values())\r\n     }\r\n       createPizza = async (pizzaItem: IPizza) => {\r\n          this.submitting = true;\r\n          try {\r\n            await agent.PizzaAdmin.create(pizzaItem);\r\n            runInAction(() => {\r\n              this.pizzaAdminRegistry.set(pizzaItem.id, pizzaItem);\r\n              this.submitting = false;\r\n            })\r\n          } catch (error) {\r\n            runInAction(() => {\r\n              this.submitting = false;\r\n            })\r\n            console.log(error);\r\n          }\r\n        };\r\n\r\n      loadPizza = async()=>{\r\n        this.loadingInitial = true;\r\n        try{\r\n            const pizza = await agent.PizzaAdmin.list();\r\n            runInAction(()=>\r\n            pizza.forEach((pizzaItem) => {\r\n            this.pizzaAdminRegistry.set(pizzaItem.id, pizzaItem);\r\n            this.pizza=[...pizza]\r\n            }))\r\n            this.loadingInitial=false\r\n        }\r\n        catch (error) {\r\n        runInAction(() => {\r\n            this.loadingInitial = false;\r\n        })\r\n            throw error;\r\n        }\r\n        } \r\n\r\n        editPizza= async (pizzaItem: IPizza) => {\r\n          this.submitting = true;\r\n          try {\r\n            await agent.PizzaAdmin.update(pizzaItem);\r\n            runInAction(() => {\r\n              this.pizzaAdminRegistry.set(pizzaItem.id, pizzaItem);\r\n              this.pizzaItem = pizzaItem;\r\n              this.submitting = false;\r\n            });\r\n          } catch (error) {\r\n            runInAction(() => {\r\n              this.submitting = false;\r\n            });\r\n            toast.error('Problem submitting data');\r\n            console.log(error);\r\n          }\r\n        };\r\n\r\n       deletePizza = async (\r\n          event: SyntheticEvent<HTMLButtonElement>,\r\n          id: number\r\n        ) => {\r\n          this.submitting = true;\r\n          this.target = event.currentTarget.name;\r\n          try {\r\n            await agent.PizzaAdmin.delete(id);\r\n            runInAction(() => {\r\n              this.pizzaAdminRegistry.delete(id);\r\n              this.submitting = false;\r\n              this.target = '';\r\n            });\r\n          } catch (error) {\r\n            runInAction(() => {\r\n              this.submitting = false;\r\n              this.target = '';\r\n            });\r\n            console.log(error);\r\n          }\r\n        };\r\n        \r\n}\r\n\r\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\nav\\Navbar.tsx",["95","96","97","98","99","100","101","102","103","104","105","106","107"],"import { AppBar, Button, Tabs, MenuItem, makeStyles, Menu, Tab, Toolbar, Typography, useMediaQuery, useTheme, IconButton, List, ListItem, ListItemText, SwipeableDrawer, withStyles, MenuProps } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport logo from '../../assets/logo.svg';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LocalDiningIcon from '@material-ui/icons/LocalDining';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport LocalPizzaIcon from '@material-ui/icons/LocalPizza';\r\nimport LocalDrinkIcon from '@material-ui/icons/LocalDrink';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  header: {\r\n    backgroundColor: \"rgb(215,54,26)\",\r\n    minHeight: \"5em\",\r\n    zIndex: theme.zIndex.modal + 1,\r\n  },\r\n  logo: {\r\n    height: \"4em\",\r\n    verticalAlign: \"middle\",\r\n    // [theme.breakpoints.down(\"md\")]: {\r\n    //   height: \"7em\"\r\n    // },\r\n    // [theme.breakpoints.down(\"xs\")]: {\r\n    //   height: \"5.5em\"\r\n    // },\r\n  },\r\n  logoTitle:{\r\n    marginLeft:\"350\",\r\n    justifyContent: \"cental\",\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  logoContainer: {\r\n    \r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  },\r\n  menu: {\r\n    backgroundColor: \"rgb(215,54,26)\",\r\n    color: \"white\",\r\n    borderRadius: \"0px\"\r\n  },\r\n  menuItem: {\r\n    fontFamily: \"Raleway\",\r\n  //  textTransform: \"none\",\r\n    fontWeight: 700,\r\n    fontSize: \"1rem\",\r\n    opacity: 0.7,\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n    }\r\n  },\r\n  tab: {\r\n    background: \"rgb(215,54,26)\",\r\n    fontFamily: \"Raleway\",\r\n    textTransform: \"none\",\r\n    fontWeight: 700,\r\n    fontSize: \"1rem\",\r\n    minWidth: 10,\r\n    marginLeft: \"25px\"\r\n  },\r\n\r\n  tabContainer: {\r\n     marginLeft: \"380px\"\r\n  },\r\n  toolbarMargin: {\r\n    marginBottom: \"2em\",\r\n    drawerIcon: {\r\n      height: \"50px\",\r\n      width: \"50px\"\r\n    },\r\n   },\r\n}))\r\ninterface IProps{\r\n  value: number,\r\n  setValue: any,\r\n  selectedIndex: number,\r\n  setSelectedIndex: any\r\n}\r\n\r\nexport const Navbar: React.FC<IProps> = (props) => {\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const classes = useStyles();\r\n  const iOS = process.platform && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n\r\n\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [openMenu, setOpenMenu] = React.useState(false);\r\n\r\n  const handleChange = (e:any, newValue:any) => {\r\n    props.setValue(newValue);\r\n  }\r\n\r\n  const handleClick = (e:any) => {\r\n    setAnchorEl(e.currentTarget);\r\n    setOpenMenu(true);\r\n  }\r\n\r\n  const handleMenuItemClick = (e:any, i:any) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n    props.setSelectedIndex(i);\r\n  }\r\n\r\n  const handleClose = (e:any) => {\r\n    setAnchorEl(null);\r\n    setOpenMenu(false);\r\n  }\r\n\r\n  const StyledMenu = withStyles({\r\n    paper: {\r\n     // border: '1px solid #d3d4d5',\r\n      backgroundColor: \"rgb(215,54,26)\",\r\n      color: \"white\",\r\n      borderRadius: \"0px\",\r\n      fontFamily: \"Raleway\",\r\n      fontWeight: 700\r\n    },\r\n  })((props: MenuProps) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n  \r\n  // const StyledMenuItem = withStyles((theme) => ({\r\n  //   root: {\r\n  //     '&:focus': {\r\n  //       backgroundColor: theme.palette.primary.main,\r\n  //       '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n  //         color: theme.palette.common.white,\r\n  //       },\r\n  //     },\r\n  //   },\r\n  // }))(MenuItem);\r\n\r\n  const menuOptions = [\r\n    {name: 'Pizza', link: '/pizza', activeIndex: 1, selectedIndex: 0, icon:<LocalPizzaIcon/>},\r\n    {name: 'Snacks', link: '/snacks', activeIndex: 1, selectedIndex: 1, icon:<FastfoodIcon/>},\r\n    {name: 'Drinks', link: '/drinks', activeIndex: 1, selectedIndex: 2, icon:<LocalDrinkIcon/>},\r\n  ];\r\n\r\n  const routes = [\r\n    {name: 'Home', link: '/', activeIndex: 0, icon: <HomeIcon/>, selectedIndex: undefined},\r\n    {\r\n      name: 'Items',\r\n      link: '/pizza',\r\n      activeIndex: 1,\r\n      ariaOwns: anchorEl ? \"simple-menu\" : undefined,\r\n      ariaPopup: anchorEl ? \"true\" as \"true\" : undefined,\r\n      icon: <LocalDiningIcon/>,\r\n      selectedIndex: undefined,\r\n      mouseOver: (event:any) => handleClick(event)\r\n   },\r\n    {name: 'Orders', link: '/orders', activeIndex: 2, icon: <ShoppingCartIcon/>, selectedIndex: undefined}\r\n  ];\r\n\r\n  useEffect(() => {\r\n    [...menuOptions, ...routes].forEach((route) => {\r\n      switch(window.location.pathname) {\r\n        case `${route.link}`:\r\n          if (props.value !== route.activeIndex ) {\r\n            props.setValue(route.activeIndex);\r\n           // route.hasOwnProperty('selectedIndex')? {...route}\r\n             if (route.selectedIndex && route.selectedIndex !== props.selectedIndex) {\r\n                 props.setSelectedIndex(route.selectedIndex);\r\n               }\r\n          }\r\n        break;\r\n        default:\r\n        break;\r\n      }\r\n    });\r\n  }, [props.value, menuOptions, props.selectedIndex, routes, props])\r\n\r\n  const tabs = (\r\n    <React.Fragment>\r\n      <Tabs\r\n        onChange={handleChange}\r\n        value={props.value}\r\n        className={classes.tabContainer}\r\n        indicatorColor = {undefined}\r\n      >\r\n       {routes.map((route, index) => (\r\n        <Tab\r\n          aria-owns={route.ariaOwns}\r\n          aria-haspopup={route.ariaPopup}\r\n          className={classes.tab}\r\n          component={Link}\r\n          onMouseOver={route.mouseOver}\r\n          key={`${route}${index}`}\r\n          to={route.link}\r\n          label={route.name}\r\n          icon={route.icon}\r\n        />\r\n      ))} \r\n      </Tabs>\r\n      \r\n      {/* <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        open={openMenu}\r\n        onClose={handleClose}\r\n        classes={{paper: classes.menu}}\r\n        MenuListProps={{onMouseLeave: handleClose}}\r\n        elevation={0}\r\n        style={{zIndex: 1302}}\r\n        keepMounted\r\n      > */}\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={openMenu}\r\n        onClose={handleClose}\r\n        MenuListProps={{onMouseLeave: handleClose}}\r\n        style={{zIndex: 1302}}>\r\n        {menuOptions.map((option, i) => (\r\n          <MenuItem\r\n            key={option.name + i}\r\n            onClick={(event:any) => {handleMenuItemClick(event, i); handleClose(event); props.setValue(1);}}\r\n            component={Link}\r\n            to={option.link}\r\n            classes={{ root: classes.menuItem }}\r\n            selected={i === props.selectedIndex && props.value === 1}\r\n          >\r\n           <span style={{marginRight:\"5px\"}}>\r\n             {option.icon}\r\n            </span>\r\n          <ListItemText primary={option.name}/>\r\n          </MenuItem>\r\n        ))}\r\n      </StyledMenu>\r\n    </React.Fragment>\r\n  )\r\n \r\n    return (\r\n      <>\r\n      <AppBar position=\"static\" className={classes.header}>\r\n        <Toolbar>\r\n            <Button\r\n              component={Link}\r\n              to=\"/\"\r\n              disableRipple\r\n              className={classes.logoContainer}\r\n              onClick={() => {console.log('click')}}\r\n            >\r\n              <img className={classes.logo} alt=\"company logo\" src={logo} />\r\n            </Button>\r\n            \r\n          <Typography variant=\"h3\" className={classes.logoTitle} >\r\n            Pizza Restaurant\r\n          </Typography>\r\n          {tabs}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.toolbarMargin} />\r\n      </>\r\n    )\r\n}\r\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\api\\agent.ts",["108","109"],"import axios, { AxiosResponse, AxiosPromise } from 'axios';\r\nimport { IPizza } from '../models/pizza';\r\n\r\naxios.defaults.baseURL='http://localhost:3001/';\r\n\r\naxios.interceptors.response.use(undefined, error=>{\r\n    if(error.response.status===404){\r\n        throw error.response;\r\n    }\r\n})\r\nconst responseBody=(response:AxiosResponse)=> response.data;\r\n\r\nconst sleep=(ms:number)=>(response:AxiosResponse)=>\r\n  new Promise<AxiosResponse>(resolve=>setTimeout(()=>resolve(response), ms))\r\n  \r\nconst requests={\r\n    get: (url:string)=>axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url:string, body: {})=>axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url:string, body: {})=>axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    delete: (url:string)=>axios.delete(url).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst PizzaAdmin={\r\n    list:():Promise<IPizza[]>=>requests.get('/pizza'),\r\n    details:(id:string)=>requests.get(`/pizza/${id}`),\r\n    create:(pizza:IPizza)=>requests.post('/pizza/', pizza),\r\n    update:(pizza:IPizza)=>requests.put(`/pizza/${pizza.id}`, pizza),\r\n    delete:(id:number)=>requests.delete(`/pizza/${id}`),\r\n}\r\n\r\nexport default {\r\n    PizzaAdmin\r\n}","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\ui\\Theme.js",[],["110","111"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\rootStore.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\stores\\modalStore.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaCard.tsx",["112","113","114"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaList.tsx",["115","116","117"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\AddPizzaDialog.tsx",["118","119","120"],"\r\nimport { TextField, Button, Grid, makeStyles } from '@material-ui/core'\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  composeValidators,\r\n  hasLengthGreaterThan\r\n} from 'revalidate';\r\nimport { Field, Form as FinalForm} from 'react-final-form';\r\nimport { PizzaFormValues } from '../../../app/models/pizza';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst validate = combineValidators({\r\n  title: isRequired({ message: 'The event title is required' }),\r\n  description: composeValidators(\r\n    isRequired('Description'),\r\n    hasLengthGreaterThan(4)({\r\n      message: 'Description needs to be at least 5 characters'\r\n    })\r\n  )(),\r\n  priceForSmall: isRequired('priceForSmall'),\r\n  priceForMedium: isRequired('priceForMedium'),\r\n  priceForLarge: isRequired('priceForLarge'),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nconst AddPizzaDialog: React.FC = () => {\r\n    // const rootStore = useContext(RootStoreContext);\r\n  const rootStore=useContext(RootStoreContext);\r\n  const {createPizza} = rootStore.pizzaStore;\r\n  const {closeModal} = rootStore.modalStore;\r\n  const [pizzaItem] = useState(new PizzaFormValues());\r\n  console.log(pizzaItem)\r\n  const [] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   if (match.params.id) {\r\n  //     setLoading(true);\r\n  //     loadPizza(match.params.id)\r\n  //       .then(pizza => {\r\n  //         setPizzaItem(new PizzaFormValues(pizzaItem));\r\n  //       })\r\n  //       .finally(() => setLoading(false));\r\n  //   }\r\n  // }, [loadPizza, match.params.id]);\r\n  const sleep = (ms:any) => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n\r\n  const handleFinalFormSubmit = async(values: any) => {\r\n    // console.log(values)\r\n    // const { date, time, ...pizzaItem } = values;\r\n    // if (!pizzaItem.id) {\r\n    //   let newPizza = {\r\n    //     ...pizzaItem,\r\n    //   };\r\n    //   console.log(newPizza)\r\n    //   createPizza(newPizza);\r\n    // // } else {\r\n    // //   editPizza(newPizza);\r\n //   }\r\n\r\n \r\n  await sleep(300)\r\n  console.log(values)\r\n\r\n  };\r\n\r\n    return (\r\n      <FinalForm\r\n        validate={validate}\r\n        initialValues={pizzaItem}\r\n        onSubmit={handleFinalFormSubmit}\r\n        render={({ handleSubmit, pristine, submitting}) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n            <Field\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n                name=\"title\"\r\n                component={TextField}\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                autoComplete=\"title\"\r\n                />\r\n            \r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n            <Field\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                component={TextField}\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                autoComplete=\"description\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"small\"\r\n                label=\"Price for small\"\r\n                type=\"number\"\r\n                name=\"priceForSmall\"\r\n                autoComplete=\"priceForSmall\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"medium\"\r\n                label=\"Price for medium\"\r\n                type=\"number\"\r\n                name=\"priceForMedium\"\r\n                autoComplete=\"priceForSmall\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"large\"\r\n                label=\"Price for large\"\r\n                type=\"number\"\r\n                name=\"priceForLarge\"\r\n                autoComplete=\"priceForSmall\"\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    onClick={closeModal}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                   // disabled={submitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  </Grid>\r\n                </Grid>\r\n        </form>)}\r\n        />  \r\n    )\r\n}\r\n\r\nexport default withRouter(observer(AddPizzaDialog))\r\n",["121","122"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\ModalContainer.tsx",["123","124"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\footer\\Footer.tsx",["125"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function StickyFooter() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"body1\">My sticky footer can be found here.</Typography>\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n  );\r\n}\r\n","D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizzaStatus.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\models\\pizza.ts",[],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\features\\items\\pizza\\PizzaForm.tsx",["126","127","128","129","130","131","132"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\form\\MuiCurrencyFormat.tsx",[],["133","134"],"D:\\Projects\\pizza-restaurant-proj\\pizza-restaurant-web\\src\\app\\common\\modals\\DeleteModal.tsx",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":3,"column":17,"nodeType":"141","messageId":"142","endLine":3,"endColumn":27},{"ruleId":"139","severity":1,"message":"143","line":3,"column":29,"nodeType":"141","messageId":"142","endLine":3,"endColumn":38},{"ruleId":"139","severity":1,"message":"144","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":14},{"ruleId":"139","severity":1,"message":"145","line":1,"column":77,"nodeType":"141","messageId":"142","endLine":1,"endColumn":85},{"ruleId":"139","severity":1,"message":"146","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":23},{"ruleId":"139","severity":1,"message":"147","line":6,"column":10,"nodeType":"141","messageId":"142","endLine":6,"endColumn":21},{"ruleId":"139","severity":1,"message":"148","line":1,"column":111,"nodeType":"141","messageId":"142","endLine":1,"endColumn":121},{"ruleId":"139","severity":1,"message":"149","line":1,"column":123,"nodeType":"141","messageId":"142","endLine":1,"endColumn":127},{"ruleId":"139","severity":1,"message":"150","line":1,"column":129,"nodeType":"141","messageId":"142","endLine":1,"endColumn":137},{"ruleId":"139","severity":1,"message":"151","line":1,"column":153,"nodeType":"141","messageId":"142","endLine":1,"endColumn":168},{"ruleId":"139","severity":1,"message":"152","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":16},{"ruleId":"139","severity":1,"message":"153","line":6,"column":8,"nodeType":"141","messageId":"142","endLine":6,"endColumn":17},{"ruleId":"139","severity":1,"message":"154","line":10,"column":8,"nodeType":"141","messageId":"142","endLine":10,"endColumn":20},{"ruleId":"139","severity":1,"message":"155","line":88,"column":9,"nodeType":"141","messageId":"142","endLine":88,"endColumn":16},{"ruleId":"139","severity":1,"message":"156","line":90,"column":9,"nodeType":"141","messageId":"142","endLine":90,"endColumn":12},{"ruleId":"139","severity":1,"message":"157","line":93,"column":10,"nodeType":"141","messageId":"142","endLine":93,"endColumn":20},{"ruleId":"139","severity":1,"message":"158","line":93,"column":22,"nodeType":"141","messageId":"142","endLine":93,"endColumn":35},{"ruleId":"159","severity":1,"message":"160","line":153,"column":9,"nodeType":"161","endLine":157,"endColumn":4},{"ruleId":"159","severity":1,"message":"162","line":159,"column":9,"nodeType":"161","endLine":172,"endColumn":4},{"ruleId":"139","severity":1,"message":"163","line":1,"column":32,"nodeType":"141","messageId":"142","endLine":1,"endColumn":44},{"ruleId":"164","severity":1,"message":"165","line":31,"column":1,"nodeType":"166","endLine":33,"endColumn":2},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"167","line":1,"column":74,"nodeType":"141","messageId":"142","endLine":1,"endColumn":80},{"ruleId":"139","severity":1,"message":"168","line":12,"column":10,"nodeType":"141","messageId":"142","endLine":12,"endColumn":21},{"ruleId":"139","severity":1,"message":"169","line":12,"column":23,"nodeType":"141","messageId":"142","endLine":12,"endColumn":32},{"ruleId":"139","severity":1,"message":"170","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":18},{"ruleId":"139","severity":1,"message":"168","line":7,"column":10,"nodeType":"141","messageId":"142","endLine":7,"endColumn":21},{"ruleId":"139","severity":1,"message":"171","line":9,"column":9,"nodeType":"141","messageId":"142","endLine":9,"endColumn":23},{"ruleId":"139","severity":1,"message":"172","line":29,"column":7,"nodeType":"141","messageId":"142","endLine":29,"endColumn":16},{"ruleId":"139","severity":1,"message":"173","line":53,"column":10,"nodeType":"141","messageId":"142","endLine":53,"endColumn":21},{"ruleId":"174","severity":1,"message":"175","line":57,"column":9,"nodeType":"176","messageId":"177","endLine":57,"endColumn":11},{"ruleId":"135","replacedBy":"178"},{"ruleId":"137","replacedBy":"179"},{"ruleId":"139","severity":1,"message":"167","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"180","line":5,"column":26,"nodeType":"141","messageId":"142","endLine":5,"endColumn":39},{"ruleId":"139","severity":1,"message":"181","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":19},{"ruleId":"139","severity":1,"message":"182","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":18},{"ruleId":"139","severity":1,"message":"183","line":2,"column":20,"nodeType":"141","messageId":"142","endLine":2,"endColumn":30},{"ruleId":"139","severity":1,"message":"184","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":20},{"ruleId":"139","severity":1,"message":"185","line":13,"column":10,"nodeType":"141","messageId":"142","endLine":13,"endColumn":13},{"ruleId":"139","severity":1,"message":"186","line":14,"column":10,"nodeType":"141","messageId":"142","endLine":14,"endColumn":27},{"ruleId":"174","severity":1,"message":"175","line":28,"column":9,"nodeType":"176","messageId":"177","endLine":28,"endColumn":11},{"ruleId":"139","severity":1,"message":"187","line":32,"column":56,"nodeType":"141","messageId":"142","endLine":32,"endColumn":61},{"ruleId":"135","replacedBy":"188"},{"ruleId":"137","replacedBy":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Grid' is defined but never used.","'reaction' is defined but never used.","'createContext' is defined but never used.","'PizzaStatus' is defined but never used.","'IconButton' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'SwipeableDrawer' is defined but never used.","'MenuIcon' is defined but never used.","'PhoneIcon' is defined but never used.","'ListItemIcon' is defined but never used.","'matches' is assigned a value but never used.","'iOS' is assigned a value but never used.","'openDrawer' is assigned a value but never used.","'setOpenDrawer' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'menuOptions' array makes the dependencies of useEffect Hook (at line 190) change on every render. To fix this, wrap the initialization of 'menuOptions' in its own useMemo() Hook.","VariableDeclarator","The 'routes' array makes the dependencies of useEffect Hook (at line 190) change on every render. To fix this, wrap the initialization of 'routes' in its own useMemo() Hook.","'AxiosPromise' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'useLocation' is defined but never used.","'useParams' is defined but never used.","'useTheme' is defined but never used.","'AddPizzaDialog' is defined but never used.","'useStyles' is assigned a value but never used.","'createPizza' is assigned a value but never used.","no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected",["190"],["191"],"'DialogActions' is defined but never used.","'CssBaseline' is defined but never used.","'Redirect' is defined but never used.","'withRouter' is defined but never used.","'makeStyles' is defined but never used.","'Box' is defined but never used.","'MuiCurrencyFormat' is defined but never used.","'reset' is assigned a value but never used.",["190"],["191"],"no-global-assign","no-unsafe-negation"]